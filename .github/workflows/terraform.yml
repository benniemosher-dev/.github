name: "Terraform"

on:
  workflow_call:
    inputs:
      aws-region:
        required: false
        type: string
      enable-cloudflare-tfvars:
        default: false
        required: false
        type: boolean
      enable-terraform-plan-apply:
        default: false
        required: false
        type: boolean
      iam-role-name:
        required: false
        type: string
    secrets:
      KEYBASE_USERNAME:
        required: false
      KEYBASE_PAPERKEY:
        required: false
      AWS_ACCOUNT_ID:
        required: false
      TF_API_TOKEN:
        required: true

jobs:
  terraform:
    name: "Terraform"
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
    env:
      TF_ROOT: .
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }}

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1-node16
        with:
          role-to-assume: arn:aws:iam::${{ secrets.AWS_ACCOUNT_ID }}:role/${{ inputs.iam-role-name }}
          aws-region: ${{ inputs.aws-region }}
        if: ${{ inputs.enable-terraform-plan-apply }}

      - name: Fetch Cloudflare Secrets
        uses: briceburg/github-action-keybase-git-repo@v0.1.1
        with:
          keybase_username: ${{ secrets.KEYBASE_USERNAME }}
          keybase_paperkey: ${{ secrets.KEYBASE_PAPERKEY }}
          repo: keybase://team/benniemosher_dev/secrets
          paths: "cloudflare.auto.tfvars"
        if: ${{ inputs.enable-cloudflare-tfvars }}

      - name: Terraform Format
        id: fmt
        run: terraform fmt -check

      - name: Terraform Init
        id: init
        run: terraform init

      - name: Terraform Validate
        id: validate
        run: terraform validate -no-color
